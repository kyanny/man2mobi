#!/usr/bin/perl
use strict;
use warnings;

use File::Spec::Functions qw(:ALL);
use File::Temp qw(tempfile);
use File::Copy;
use Getopt::Long qw(HelpMessage);
use Pod::Usage;

GetOptions('h|help' => \&HelpMessage);
my $name = shift || pod2usage(2);
my @delete = ();

# get man file's absolute path
my $filename_man = `man -W $name`;
chomp $filename_man;

# if man file is gzipped, extract it and save to temporary file
if ($filename_man =~ /\.gz$/) {
    my ($tmp_fh_man, $tmp_filename_man) = tempfile;
    push @delete, $tmp_filename_man;
    system("gunzip -c $filename_man > $tmp_filename_man");
    $filename_man = $tmp_filename_man;
}

# generate html file from man file by man2html
my ($tmp_fh_html, $tmp_filename_html) = tempfile(SUFFIX => '.html');
push @delete, $tmp_filename_html;
`man2html $filename_man > $tmp_filename_html`;

# generate mobi file by kindlegen
`kindlegen $tmp_filename_html`;

# copy generated mobi file (under temporary directory) to current directory
(my $tmp_filename_mobi = $tmp_filename_html) =~ s/\.html/.mobi/;
push @delete, $tmp_filename_mobi;
my $filename_mobi = catfile(rel2abs(curdir), "$name.mobi");
copy($tmp_filename_mobi, $filename_mobi);

# delete temporary files
unlink($_) for @delete;


__END__

=head1 NAME

man2mobi - convert man pages to mobi format

=head1 SYNOPSIS

 $ man2mobi name

=head1 DESCRIPTION

man2mobi takes one argument. Argument is a name of man page.

man2mobi depends on man2html(1) and KindleGen.

=head1 SEE ALSO

=over

=item * man2html(1)

=item * KindleGen

=back

=head1 AUTHOR

Kensuke Kaneko, C<< <kyanny at gmail.com> >>

=cut
